ratingmat2 <- as.matrix(ratingmat)
ratingmat2 <- as(ratingmat2, "realRatingMatrix")
ratingmat2 <- normalize(ratingmat2, method="center", row=TRUE)
matrix2 <- as(ratingmat2, "matrix")
colnames(userSelect) <- colnames(ratingmat)
profile_matrix <- rbind(userSelect,matrix2)
profile_matrix <- as.matrix(profile_matrix)
profile_matrix <- as(profile_matrix, "realRatingMatrix")
recommender_model <- Recommender(profile_matrix, method = "UBCF",param=list(method="Cosine",nn=2))
recom <- predict(recommender_model, profile_matrix[1], n=10)
recom_list <- as(recom, "list")
column_names <- c("Title", "Genre")
recommendation <- data.frame(matrix(ncol=2, nrow = 10))
colnames(recommendation) <- column_names
if (length(recom_list) == 0){
error_msg <- "Sorry, there is not sufficient data for the movies you selected. Please choose different movies."
return(error_msg)
} else{
for (i in c(1:10)){
recommendation[i,1] <- as.character(subset(movies2, movies2$movieId == as.integer(recom_list[[1]][i]))$title)
recommendation[i,2] <- as.character(subset(movies2, movies2$movieId == as.integer(recom_list[[1]][i]))$genres)
}
return(recommendation)
}
}
RecommendMovie(input1, input2, input3)
RecommendMovie <- function(input1,input2,input3) {
NCol <- as.numeric(dim(movies)[[1]])
userarray <- matrix(ncol = NCol, nrow = 1)
index1 <- which(movies[,2] == input1)
index2 <- which(movies[,2] == input2)
index3 <- which(movies[,2] == input3)
userarray[1,index1] <- 1
userarray[1,index2] <- 0.75
userarray[1,index3] <- 0.5
colnames(userarray) <- colnames(ratingmatrix)
profile_matrix <- rbind(userarray,ratingmatrix)
profile_matrix <- as(profile_matrix, "realRatingMatrix")
recommender <- Recommender(profile_matrix, method = "UBCF",param=list(method="Cosine",nn=2))
prediction <- predict(recommender, profile_matrix[1], n=10)
prediction_list <- as(prediction, "list")
column_names <- c("Title", "Genre")
recommendation <- data.frame(matrix(ncol=2, nrow = 10))
colnames(recommendation) <- column_names
if (length(prediction_list) == 0){
error_msg <- "Sorry, there is not sufficient data for the movies you selected. Please choose different movies."
return(error_msg)
} else{
for (i in c(1:10)){
recommendation[i,1] <- as.character(subset(movies, movies$movieId == as.integer(prediction_list[[1]][i]))$title)
recommendation[i,2] <- as.character(subset(movies, movies$movieId == as.integer(prediction_list[[1]][i]))$genres)
}
return(recommendation)
}
}
ratingmatrix <- readRDS(file="ratingmatrix.rds")
movies <- readRDS(file="movies.rds")
RecommendMovie(input1, input2, input3)
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
input1
movies$genres[movies$title == input1]
runApp('MovieRecommender')
column_names <- c("Title", "Genre")
InputTable <- data.frame(matrix(ncol=2, nrow = 3))
colnames(InputTable) <- column_names
InputTable[1,1] <- input1
InputTable[1,2] <- movies$genres[movies$title == input1]
InputTable[2,1] <- input2
InputTable[2,2] <- movies$genres[movies$title == input2]
InputTable[3,1] <- input3
InputTable[3,2] <- movies$genres[movies$title == input3]
InputTable
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
movies <- readRDS(file="movies.rds")
ratingmatrix <- readRDS(file="ratingmatrix.rds")
NCol <- as.numeric(dim(movies)[[1]])
userarray <- matrix(ncol = NCol, nrow = 1)
index1 <- which(movies[,2] == input1)
index2 <- which(movies[,2] == input2)
index3 <- which(movies[,2] == input3)
userarray[1,index1] <- 5
userarray[1,index2] <- 4
userarray[1,index3] <- 3
usertarray
userarray
index1
ratingmatrix
movies <- read.csv("movies2014.csv",header = TRUE, stringsAsFactors=FALSE)
ratings <- read.csv("ratings2m.csv", header = TRUE, nrows = 1000000)
movies <- movies[-which((movies$movieId %in% ratings$movieId) == FALSE),]
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
dim(ratingmatrix)
ratingmatrix <- readRDS(file="ratingmatrix.rds")
movies <- readRDS(file="movies.rds")
NCol <- as.numeric(dim(movies)[[1]])
userarray <- matrix(ncol = NCol, nrow = 1)
index1 <- which(movies[,2] == input1)
index2 <- which(movies[,2] == input2)
index3 <- which(movies[,2] == input3)
userarray[1,index1] <- 5
userarray[1,index2] <- 4
colnames(userarray) <- colnames(ratingmatrix)
profile_matrix <- rbind(userarray,ratingmatrix)
dim(profile_matrix)
runApp('copy')
runApp('MovieRecommender')
setwd("/home/stefan/RProjcets/MovieRecommender/movieRec-master/")
movies <- read.csv("movies2013.csv",header = TRUE, stringsAsFactors=FALSE)
ratings <- read.csv("ratings2m.csv", header = TRUE, nrows = 1000000)
movies <- movies[-which((movies$movieId %in% ratings$movieId) == FALSE),]
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
ratingmatrix <- dcast(ratings, userId~movieId, value.var = "rating", na.rm=FALSE)
ratingmatrix <- ratingmatrix[,-1]
ratingmatrix <- as.matrix(ratingmatrix)
ratingmatrix <- as(ratingmatrix, "realRatingMatrix")
ratingmatrix <- normalize(ratingmatrix, method="center", row=TRUE)
ratingmatrix <- as(ratingmatrix, "matrix")
saveRDS(ratingmatrix, "ratingmatrix2013.rds")
saveRDS(movies, "movies2013.rds")
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
NCol <- as.numeric(dim(movies)[[1]])
userarray <- matrix(ncol = NCol, nrow = 1)
index1 <- which(movies[,2] == input1)
index2 <- which(movies[,2] == input2)
index3 <- which(movies[,2] == input3)
userarray[1,index1] <- 5
userarray[1,index2] <- 0.000004
userarray[1,index3] <- 100
colnames(userarray) <- colnames(ratingmatrix)
profile_matrix <- rbind(userarray,ratingmatrix)
profile_matrix <- as(profile_matrix, "realRatingMatrix")
recommender <- Recommender(profile_matrix, method = "UBCF",param=list(method="Cosine",nn=3))
prediction <- predict(recommender, profile_matrix[1], n=10)
prediction
runApp('MovieRecommender')
movies <- read.csv("movies2013.csv",header = TRUE, stringsAsFactors=FALSE)
ratings <- read.csv("ratings2m.csv", header = TRUE, nrows = 1000000)
movies <- movies[-which((movies$movieId %in% ratings$movieId) == FALSE),]
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
ratingmatrix <- dcast(ratings, userId~movieId, value.var = "rating", na.rm=FALSE)
ratingmatrix <- ratingmatrix[,-1]
ratingmatrix <- as.matrix(ratingmatrix)
ratingmatrix <- as(ratingmatrix, "realRatingMatrix")
ratingmatrix <- normalize(ratingmatrix, method="center", row=TRUE)
ratingmatrix <- as(ratingmatrix, "matrix")
View(movies)
movies[15,]
movies[15,]$genres
movies[15,]$genres<- "Crime|Drama"
movies[15,]
saveRDS(ratingmatrix, "ratingmatrix2013.rds")
saveRDS(movies, "movies2013.rds")
runApp('copy')
runApp('MovieRecommender')
runApp('MovieRecommender')
movies <- readRDS(file="movies2013.rds")
getwd()
View(movies)
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
setwd("/home/stefan/RProjcets/MovieRecommender/movieRec-master/")
movies <- read.csv("movies2013.csv",header = TRUE, stringsAsFactors=FALSE)
ratings <- read.csv("ratings2m.csv", header = TRUE, nrows = 1000000)
movies <- movies[-which((movies$movieId %in% ratings$movieId) == FALSE),]
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
ratingmatrix <- dcast(ratings, userId~movieId, value.var = "rating", na.rm=FALSE)
ratingmatrix <- ratingmatrix[,-1]
ratingmatrix <- as.matrix(ratingmatrix)
ratingmatrix <- as(ratingmatrix, "realRatingMatrix")
ratingmatrix <- normalize(ratingmatrix, method="center", row=TRUE)
ratingmatrix <- as(ratingmatrix, "matrix")
saveRDS(ratingmatrix, "ratingmatrix2013.rds")
saveRDS(movies, "movies2013.rds")
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('copy')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('copy')
a <- "aaa"
a
as.data.frame(a)
runApp('MovieRecommender')
movies <- read.csv("movies2013.csv",header = TRUE, stringsAsFactors=FALSE)
setwd("/home/stefan/RProjcets/MovieRecommender/movieRec-master/")
movies <- read.csv("movies2013.csv",header = TRUE, stringsAsFactors=FALSE)
ratings <- read.csv("ratings2m.csv", header = TRUE, nrows = 1500000)
movies <- movies[-which((movies$movieId %in% ratings$movieId) == FALSE),]
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
ratings <- read.csv("ratings2m.csv", header = TRUE, nrows = 1000000)
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
ratings <- read.csv("ratings2m.csv", header = TRUE, nrows = 1500000)
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
ratingmatrix <- dcast(ratings, userId~movieId, value.var = "rating", na.rm=FALSE)
ratingmatrix <- ratingmatrix[,-1]
ratingmatrix <- as.matrix(ratingmatrix)
ratingmatrix <- as(ratingmatrix, "realRatingMatrix")
ratingmatrix <- normalize(ratingmatrix, method="center", row=TRUE)
ratingmatrix <- as(ratingmatrix, "matrix")
saveRDS(ratingmatrix, "ratingmatrix2013-2.rds")
ratings <- read.csv("ratings2m.csv", header = TRUE) #nrows = 1500000)
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
ratingmatrix <- dcast(ratings, userId~movieId, value.var = "rating", na.rm=FALSE)
ratingmatrix <- ratingmatrix[,-1]
ratingmatrix <- as.matrix(ratingmatrix)
ratingmatrix <- as(ratingmatrix, "realRatingMatrix")
ratingmatrix <- normalize(ratingmatrix, method="center", row=TRUE)
ratingmatrix <- as(ratingmatrix, "matrix")
saveRDS(ratingmatrix, "ratingmatrix2013-2.rds")
runApp('MovieRecommender')
ratingmatrix <- readRDS(file="ratingmatrix2013-2.rds")
movies <- readRDS(file="movies2013.rds")
NCol <- as.numeric(dim(movies)[[1]])
userarray <- matrix(ncol = NCol, nrow = 1)
index1 <- which(movies[,2] == input1)
index2 <- which(movies[,2] == input2)
index3 <- which(movies[,2] == input3)
index4 <- which(movies[,2] == input4)
userarray[1,index1] <- 0.5
input4 <- "Interstellar (2014)"
index4 <- which(movies[,2] == input4)
userarray[1,index1] <- 0.5
userarray[1,index2] <- 0.4
userarray[1,index3] <- 0.3
userarray[1,index4] <- 0.2
colnames(userarray) <- colnames(ratingmatrix)
colnames(ratingmatrix)
dim(ratingmatrix)
dim(userarray)
setwd("/home/stefan/RProjcets/MovieRecommender/movieRec-master/")
movies <- read.csv("movies2013.csv",header = TRUE, stringsAsFactors=FALSE)
ratings <- read.csv("ratings2m.csv", header = TRUE) #nrows = 1500000)
movies <- movies[-which((movies$movieId %in% ratings$movieId) == FALSE),]
ratings <- ratings[-which(ratings$movieId %in% movies$movieId == FALSE),]
ratingmatrix <- dcast(ratings, userId~movieId, value.var = "rating", na.rm=FALSE)
ratingmatrix <- ratingmatrix[,-1]
ratingmatrix <- as.matrix(ratingmatrix)
ratingmatrix <- as(ratingmatrix, "realRatingMatrix")
ratingmatrix <- normalize(ratingmatrix, method="center", row=TRUE)
ratingmatrix <- as(ratingmatrix, "matrix")
saveRDS(movies, "movies2013-2.rds")
runApp('MovieRecommender')
ratingmatrix <- readRDS(file="ratingmatrix2013-2.rds")
movies <- readRDS(file="movies2013-2.rds")
dim(ratingmatrix)
dim(movies)
colnames(ratingmatrix)
ratings$movieId
colnames(ratingmatrix)
movies <- movies[-which((movies$movieId %in% colnames(ratingmatrix)) == FALSE),]
dim(movies)
dim(ratingmatrix)
runApp('copy')
runApp('MovieRecommender')
runApp('copy')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('copy')
runApp('MovieRecommender')
runApp('copy')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
dim(profile_matrix)
runApp('copy')
runApp('MovieRecommender')
dim(profile_matrix)
toMatch <- c("Horror", "War", "Musical")
grep(paste(toMatch,collapse="|"), movies$$genres, value=TRUE))
grep(paste(toMatch,collapse="|"), movies$genres, value=TRUE))
grep(paste(toMatch,collapse="|"), movies$genres, value=TRUE)
grep(paste(toMatch,collapse="|"), movies$genres)
movies$genres[movies$title == input$input1]
movies$genres[movies$title == input1]
genres_combined <- paste(genre1, genre2, genre3, genre4, sep = "|")
genre1 <- movies$genres[movies$title == input1]
genre2 <- movies$genres[movies$title == input2]
genre3 <- movies$genres[movies$title == input3]
genre4 <- movies$genres[movies$title == input4]
genres_combined <- paste(genre1, genre2, genre3, genre4, sep = "|")
genres_combined
genre_tomatch <- strsplit(genres_combined,split = "|")
genre_tomatch
library(stringr)
genre_tomatch <- str_split(genres_combined, pattern= "|")
genres_combined <- paste(genre1, genre2, genre3, genre4, sep = "|")
genre_tomatch <- str_split(genres_combined, pattern= "|")
genre_tomatch
genres_combined <- paste(genre1, genre2, genre3, genre4, sep = "|")
genres_combined
genres_combined <- gsub("|", " ", genres_combined)
genres_combined
genres_combined <- paste(genre1, genre2, genre3, genre4, sep = "|")
genre_tomatch <- str_split(genres_combined, pattern= "\\|")
genre_tomatch
genres_combined <- paste(genre1, genre2, genre3, genre4, sep = "|")
genre_tomatch <- str_split(genres_combined, pattern= "\\|")[[1]]
genre_tomatch
genre_tomatch <- unique(genre_tomatch)
genre_tomatch
recommender <- Recommender(profile_matrix, method = "UBCF",param=list(normalize = NULL, method="Cosine", nn = 10))
prediction <- predict(recommender, profile_matrix[1], n=200)
prediction_list <- as(prediction, "list")
column_names <- c("Title", "Genre")
recommendation <- data.frame(matrix(ncol=2, nrow = 200))
colnames(recommendation) <- column_names
for (i in c(1:200)){
recommendation[i,1] <- as.character(subset(movies, movies$movieId == as.integer(prediction_list[[1]][i]))$title)
recommendation[i,2] <- as.character(subset(movies, movies$movieId == as.integer(prediction_list[[1]][i]))$genres)
}
index_genres <- grep(paste(genre_tomatch,collapse="|"),recommendation$Genre, value=TRUE)
index_genres
index_genres <- grep(paste(genre_tomatch,collapse="|"),recommendation$Genre)
index_genres
input1 <- Honeymoon (2014)
input1 <- "Honeymoon (2014)"
input2 <- "Poltergeist (2015)"
input3 <- "It Follows (2014)"
input4<- "The Witch (2015)"
movies <- movies[-which((movies$movieId %in% colnames(ratingmatrix)) == FALSE),]
NCol <- as.numeric(dim(movies)[[1]])
userarray <- matrix(ncol = NCol, nrow = 1)
index1 <- which(movies[,2] == input1)
index2 <- which(movies[,2] == input2)
index3 <- which(movies[,2] == input3)
index4 <- which(movies[,2] == input4)
userarray[1,index1] <- 2
userarray[1,index2] <- 1.2
userarray[1,index3] <- 0.6
userarray[1,index4] <- 0.3
colnames(userarray) <- colnames(ratingmatrix)
profile_matrix <- rbind(userarray,ratingmatrix)
profile_matrix <- as(profile_matrix, "realRatingMatrix")
recommender <- Recommender(profile_matrix, method = "UBCF",param=list(normalize = NULL, method="Cosine", nn = 10))
prediction <- predict(recommender, profile_matrix[1], n=200)
prediction_list <- as(prediction, "list")
column_names <- c("Title", "Genre")
recommendation <- data.frame(matrix(ncol=2, nrow = 200))
colnames(recommendation) <- column_names
for (i in c(1:200)){
recommendation[i,1] <- as.character(subset(movies, movies$movieId == as.integer(prediction_list[[1]][i]))$title)
recommendation[i,2] <- as.character(subset(movies, movies$movieId == as.integer(prediction_list[[1]][i]))$genres)
}
genre1 <- movies$genres[movies$title == input1]
genre2 <- movies$genres[movies$title == input2]
genre3 <- movies$genres[movies$title == input3]
genre4 <- movies$genres[movies$title == input4]
genres_combined <- paste(genre1, genre2, genre3, genre4, sep = "|")
genre_tomatch <- str_split(genres_combined, pattern= "\\|")[[1]]
genre_tomatch <- unique(genre_tomatch)
index_genres <- grep(paste(genre_tomatch,collapse="|"),recommendation$Genre)
index_genres
recommendation2 <- rbind(recommendation[index_genres,], recommendation[!index_genres,])
recommendation2
runApp('MovieRecommender')
recommendation2
recommendation2[10,]
recommendation2[1:10,]
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
genre1 <- movies$genres[movies$title == input1]
genre1
genre1 <- str_split(genre1, pattern= "\\|")[[1]]
genre1
index_genres_1 <- grep(paste(genre1,collapse="|"),recommendation$Genre)
index_genres_1
length(index_genres_1)
runApp('MovieRecommender')
input1 <- "Amy (2015)"
input2 <- "Cocaine Cowboys: Reloaded (2014)"
input3 <- "Life Itself (2014)"
movies <- movies[-which((movies$movieId %in% colnames(ratingmatrix)) == FALSE),]
NCol <- as.numeric(dim(movies)[[1]])
userarray <- matrix(ncol = NCol, nrow = 1)
index1 <- which(movies[,2] == input1)
index2 <- which(movies[,2] == input2)
index3 <- which(movies[,2] == input3)
index4 <- which(movies[,2] == input4)
userarray[1,index1] <- 1
userarray[1,index2] <- 1
userarray[1,index3] <- 1
colnames(userarray) <- colnames(ratingmatrix)
profile_matrix <- rbind(userarray,ratingmatrix)
profile_matrix <- as(profile_matrix, "realRatingMatrix")
recommender <- Recommender(profile_matrix, method = "UBCF",param=list(normalize = NULL, method="Cosine", nn = 10))
prediction <- predict(recommender, profile_matrix[1], n=200)
prediction_list <- as(prediction, "list")
prediction_list
column_names <- c("Title", "Genre")
recommendation <- data.frame(matrix(ncol=2, nrow = 200))
colnames(recommendation) <- column_names
for (i in c(1:200)){
recommendation[i,1] <- as.character(subset(movies, movies$movieId == as.integer(prediction_list[[1]][i]))$title)
recommendation[i,2] <- as.character(subset(movies, movies$movieId == as.integer(prediction_list[[1]][i]))$genres)
}
recommendation
genre1 <- movies$genres[movies$title == input1]
genre2 <- movies$genres[movies$title == input2]
genre3 <- movies$genres[movies$title == input3]
genres_combined <- paste(genre1, genre2, genre3, sep = "|")
genre_tomatch <- str_split(genres_combined, pattern= "\\|")[[1]]
genre_tomatch <- unique(genre_tomatch)
index_genres <- grep(paste(genre_tomatch,collapse="|"),recommendation$Genre)
index_genres
recommendation[!index_genres_1]
recommendation[-index_genres_1]
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
runApp('MovieRecommender')
